import { TestBed } from '@automock/jest';
import { UnitReference } from '@automock/core';
import { SinonStubbedInstance } from 'sinon';

import Mocked = jest.Mocked;

class ClassUnderTest {}

describe('basic test suite', () => {
  let unit: ClassUnderTest;
  let unitRef: UnitReference;
  let someMock: jest.Mocked<SomeClass>;

  beforeAll(() => {
    const { unitRef: ref, unit: underTest } = TestBed.create<ClassUnderTest>(ClassUnderTest)
      .mock<string>('CONSTANT_VALUE')
      .using('arbitrary-string')
      .mock(SomeClass)
      .using({ something: jest.fn() })
      .compile();

    unitRef = ref;
    unit = underTest;
    someMock = unitRef.get(SomeClass);
  });

  it('should work', () => {
    expect(unit).toBeDefined();
  });
}); 